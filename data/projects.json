[
	{
		"name": "loanshark",
		"title": "Loanshark",
		"stylesheet": "/static/build/projectpage.css",
		"url": "/project/loanshark",
		"description": "Web app a friend and I made for the HackUVic hackathon in 2018.",
		"body": [
			"<p>You can take a look at this project",
			"<a href='http://loan-shark-app.com'>here</a>, and you can view",
			"its GitHub repository",
			"<a href='https://github.com/otonnesen/loanshark'>here</a>.</p>",
			"<p>A friend and I created this web app for the HackUVic hackathon",
			"in March 2018. We were just taking our second programming course,",
			"and went in knowing next to nothing about anything related to web",
			"development. The basic premise of the app was to make tracking",
			"money owed between our group of friends easier, by adding",
			"transactions between eachother's accounts denoting who was owed",
			"what.</p>",
			"<p>Working on this project, I learned about a variety of methods,",
			"protocols and technologies:</p>",
			"<ul>",
			"<li>Creating and consuming HTTP APIs</li>",
			"<li>Sanitizing user input</li>",
			"<li>Implementing a database</li>",
			"<li>Managing user authentication</li>",
			"<li>Tracking state with cookies</li>",
			"</ul>",
			"<h3>Creating and consuming HTTP APIs</h3>",
			"<p>We used Flask, a Python library, to make our HTTP server",
			"and made routes to create, read, and update transactions with",
			"GET and POST methods, as well as to create and  log in to user",
			"accounts.</p>",
			"<p>Our client was written in pure JavaScript and communicated",
			"directly with our Python server. Our JavaScript handled things",
			"like checking that usernames were available and contained only",
			"allowed characters and checking the validity of logins.</p>",
			"<h3>Sanitizing user input</h3>",
			"<p>We used the built in templating system that came with Flask --",
			"Jinja2 -- to render our HTML. After figuring out how templates",
			"worked, this did everything we needed as far as input sanitation",
			"went.</p>",
			"<h3>Implementing a database</h3>",
			"<p>We used PostgreSQL to store our data (which, looking back, was",
			"way overkill). I had learned a bit of SQL in a course the",
			"semester before, so I had a pretty good idea of what I wanted",
			"to do once I had the database server running, but getting it",
			"running was quite the project. I eventually got it set up and",
			"connected to our Python server, however, and wrote all of our",
			"transaction and login logic. set up as stored procedures.</p>",
			"<h3>Managing user authentication</h3>",
			"<p>I read an OWASP cheatsheet to learn how to properly store",
			"passwords for our user accounts. We used Postgres' built in",
			"crypt function and generated a salt with its implementation of",
			"the blowfish cipher. Otherwise, we simply sent the password to",
			"see if its hash matched the one stored in the database.</p>",
			"<h3>Tracking state with cookies</h3>",
			"<p>When a user logs in, we store their username in a cookie to",
			"later send to the database whenever they want to view their",
			"transactions. We used Flask's built in session manager to",
			"achieve this.</p>",
			"<p>Although the end product is not very impressive visually or",
			"functionally, this project was one of the most valuable learning",
			"experiences I had in my first year at UVic. I often find myself",
			"coming back for reference and to steal code from this project.</p>"
		],
		"image_href": "/static/img/sharkfin.jpg",
		"image_alt": "Loanshark sharkfin logo"
	},
	{
		"name": "portfolio",
		"title": "Portfolio",
		"stylesheet": "/static/build/projectpage.css",
		"url": "/project/portfolio",
		"description": "Personal website made to show off my projects.",
		"body": [
			"<p>You can view this website's code",
			"<a href='https://github.com/otonnesen/portfolio'>here</a>.</p>",
			"<p>I quickly threw this website together over the course of a",
			"week or so. When I first started working on it, I was on",
			"vacation staying somewhere with around 2Kbps of bandwidth, so I",
			"was acutely aware of how long webpages could take to load when",
			"they had to load a bunch of junk. I tried to keep this website as",
			"minimal as possible. No fancy pictures, no JavaScript frameworks,",
			"just HTML and CSS. I wrote my server in Go, and each project's",
			"info is just stored in a JSON file. I had originally planned to",
			"make the backend a lot more modular, with more templating,",
			"a UI to add projects, and a database, but decided it made more",
			"sense to keep it quite simple since I won't be updating it very",
			"frequently.</p>"
		],
		"image_href": "/static/img/portfolio.jpg",
		"image_alt": "Portfolio/folder icon"
	},
	{
		"name": "battlesnake",
		"title": "Battlesnake",
		"stylesheet": "/static/build/projectpage.css",
		"url": "/project/battlesnake",
		"description": "Snake AI created to compete in battlesnake 2019.",
		"body": [
			"<p>You can take a look at the code for my last year's battlesnake",
			"<a href='https://github.com/otonnesen/battlesnake2019'>here</a>.",
			"</p>",
			"<p><a href='https://play.battlesnake.io'>Battlesnake</a> is a",
			"yearly programming competition held in Victoria, BC wherein teams",
			"must write a web server capable of playing a variation of the",
			"classic Snake game.</p",
			"<p>I've competed in this event twice, in 2018 and in 2019. My",
			"first time competing, myself and two friends entered into the",
			"beginner division. We spent the entire day trying to implement",
			"a single graph algorithm and eventually entered as 'Bogo Snake'",
			"inspired by its seemingly random and definitely suboptimal move",
			"choices, similar to the bogo sort algorithm. We didn't place",
			"very well that year, but we had enough fun to come back the next",
			"year, this time each writing our own snakes.</p>",
			"<p>The main premise of my snake this year was to take each",
			"possible move, run through a set of filters to remove any that",
			"would cause me to immediately die, and then run each remaining",
			"move through a set of heuristics that leave them (hopefully) in",
			"order from best to worst. I felt confident and entered this",
			"snake into the intermediate bracket. My snake worked",
			"surprisingly well when pitted against two or three other snakes",
			"during testing, but I later found out that I had tweaked it to",
			"be too greedy to effectively compete against the full board of",
			"eight, and again I was knocked out early, but this time at",
			"least with a snake I was much more proud of.</p>",
			"<p>Overall, battlesnake is always a fun way to hang out with",
			"friends and make new ones. Even more, it's a nice break from the",
			"C and Assembly code I have to write for my classes, and lets me",
			"try out some of the new algorithms and techniques I learn",
			"throughout the year in a bit less contrived of a setting.</p>"
		],
		"image_href": "/static/img/battlesnake.jpg",
		"image_alt": "Battlesnake Snake Head Logo"
	},
	{
		"name": "filesystem",
		"title": "Unix-Style Filesystem",
		"stylesheet": "/static/build/projectpage.css",
		"url": "/project/filesystem",
		"description": "Filesystem written in C for my Operating Systems class.",
		"body": [
			"<p>You can view the code for this project",
			"<a href='https://github.com/otonnesen/coursework/tree/master/csc360/a3'>here</a>.</p>",
			"<p>Creating a filesystem from scratch was the final project in my",
			"Operating Systems class at UVic. All in all the project took",
			"around a month to complete. I learned a lot about writing C code",
			"and linux syscalls (I never thought I'd read so many man pages!),",
			"low-level data structures, and what kinds tradeoffs must be made",
			"when writing and designing OS-level (really any) software.</p>",
			"<p>The filesystem was designed for a 2MB virtual disk on the",
			"computer's physical disk, so the first thing I did was implement",
			"a primitive disk API similar to one that might be included in a",
			"real physical disk. This API allowed for reading and writing of",
			"blocks -- 512 byte segments of contiguous data on the disk.</p>",
			"<p>My next task was to begin to implement some of the data",
			"structures I planned to use in my filesystem, including bitmaps,",
			"the superblock, inodes, files, and directories. My bitmap was",
			"simply an array of 32 bit unsigned with some binary arithmetic",
			"abstracted away into functions like set_bit and clr_bit. My block",
			"type was a union of many different types, like arrays of inodes,",
			"bitmaps showing which blocks were available, or files' block",
			"pointers and directory lists.</p>",
			"<p>This project was one of the first in which I had to make",
			"decisions regarding the tradeoffs of different methods of",
			"achieving my goal. I chose to write to files directly instead",
			"of to a cache. This significantly decreased the speed of writes",
			"in my filesystem, but increased its reliability; since crashing",
			"before checking in writes from cache was no longer possible, no",
			"data would be lost because it hadn't yet been written to disk",
			"unless the crash occurred during the write itself. Instead of",
			"writing files in contiguous segments in the free space at the",
			"end of the disk, which would have again increased write speeds,",
			"I decided to write file data into whatever blocks were available,",
			"regardless of whether or not they were contiguous. This",
			"eliminated the need to go through periodically and check for and",
			"fill any space that had freed up in the disk.</p>",
			"<p>This project has certainly been one of my largest, coming in",
			"at around 1100 lines of code overall. The C, Linux, and data",
			"structures skills are definitely handy, but probably the most",
			"important takeaway from this project is the mindset that every",
			"decision has a tradeoff, and to really analyze what my needs are",
			"when designing a large or critical system.</p>"
		],
		"image_href": "/static/img/filesystem.jpg",
		"image_alt": "Filesystem folder/directory icon"
	},
	{
		"name": "shell",
		"title": "Command-Line Shell",
		"stylesheet": "/static/build/projectpage.css",
		"url": "/project/shell",
		"description": "Command-line shell written in C for my Operating Systems class.",
		"body": [
			"<p>You can view the code for this project",
			"<a href='https://github.com/otonnesen/coursework/tree/master/csc360/a1/kapish'>here</a>.</p>",
			"<p>The first assignment in my Operating Systems class was to",
			"build a command-line shell for the Linux kernel. This shell had",
			"to implement four built in commands: <code>setenv</code>,",
			"<code>unsetenv</code>, <code>getenv</code>, <code>cd</code>,",
			"and <code>exit</code>. It also had to be able to execute",
			"arbitrary programs installed on the system. This project taught",
			"me about communicating with the Linux kernel with syscalls,",
			"reading and parsing user input, and forking processes.</p>",
			"<p>Before starting on this project, I thought that my shell would",
			"have to keep track of the environment  on its own, but this is",
			"taken care of by the kernel itself. When the shell is first run,",
			"it inherits the environment from which it was originally run.",
			"From there, it uses syscalls to manipulate environment",
			"variables.</p>",
			"<p>My first task was to read and parse the user's input. My shell",
			"reads one line from the standard input into a string. The string",
			"is then parsed into an array of tokens and passed to a function",
			"to try to execute the command. If the first token is a built in",
			"command, the shell tries to run it with the arguments given,",
			"otherwise it tries to run the command as an installed",
			"program.</p>",
			"<p>To run the command as an installed program, the shell forks",
			"and searches the directories in the PATH variable for a binary",
			"of the same name. The process running the shell then waits for",
			"its forked child to finish execution before resuming.</p>",
			"<p>I implemented an additional built in command,",
			"<code>history</code>, which maintained a linked list of commands",
			"used throughout the session, and allowed the user to repeat",
			"commands by prepending a <code>!</code> to a prefix of the",
			"command they wish to use, similarly to the bash shell. This was",
			"an interesting feature to implement since I'd previously only",
			"made linked lists and similar data structures in languages with",
			"automatic memory management, so handling allocating and freeing",
			"nodes in the history list was a good way to help cement my",
			"understanding of memory management in C.</p>",
			"<p>This project was fun because it was the first C program I'd",
			"written that felt like it could serve a real purpose, and wasn't",
			"done just for the sake of having done it. It also allowed me to ",
			"practice searching and reading the C and Linux documentation to",
			"most efficiently figure out the best way to do something, which",
			"turned out being very important for the rest of the course.</p>"
		],
		"image_href": "/static/img/shell.jpg",
		"image_alt": "Command line shell icon"
	}
]
